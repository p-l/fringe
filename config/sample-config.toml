[fringe]
# Limit users accepted with email from this domain
# allowed-domain = "yourdomain.com"
#
# Secret used to protect the JWT used after authentication.
# secret = "<SOME RANDOME SECRET STRING>"
#
# Administration function are enabled for users with these emails
# admin-emails = ["you@yourdomain.com"]

[database]
# Database location
# database = /var/lib/fringe/fringe.db

[radius]
# Set a radius secret to be share between client and server should be a different secret from the fringe secret
# secret = "<SOME RANDOM SECRET STRING>"

[web]
# Set the publicly visible domain name for the web server
# domain = "fringe.mydomain.com"
#
# Automatically get TLS server certification using https://letsencrypt.org
# lets-encrypt = true
#
# Specify the location of the certificate (when lets-encrypt = false)
# tls-cert-file = "certs/server.crt"
# tls-key-file = "certs/server.key"
#
# Specify where the HTTP and HTTPS server listen for incoming connection. You can restrict to a specific adaptor
# by specifying its IP address at the begining (ex: "127.0.0.1:80" or "10.0.0.1:443")
# http-bind-address = ":80"
# https-bind-address = ":443"

[google-oauth]
# You must create an OAuth application in the Google Developer Console
# -> Instructions can be found here: https://support.google.com/cloud/answer/6158849?hl=en
# The callback URL must be what you place in the http root-url config followed by /auth/google/callback/
#
# client-id = "GOOGLE_PROVIDED_CLIENT_ID.apps.googleusercontent.com"
# client-secret = "GOOGLE_PROVIDED_CLIENT_SECRET"

[texts.password]
# Fringe does not support multiple language just yet. Until then, you can alter and insert text using configuration
#
# Set a hint line under the password field (empty by default)
# hint = "Save this password"
#
# Add an info panel under password field to let users know where to use it. Title is the first line followed by
# a list of items in an array (empty by default)
# info-title = "Where to use"
# info-items = ["Joining the enterprise wi-fi", "Connecting to the VPN"]