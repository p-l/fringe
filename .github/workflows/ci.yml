name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]



jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Setup golangci-lint
      uses: golangci/golangci-lint-action@v2
      with:
        # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
        version: latest
        
        # Optional: show only new issues if it's a pull request. The default value is `false`.
        # only-new-issues: true

        # Optional: if set to true then the action will use pre-installed Go.
        # skip-go-installation: true

        # Optional: if set to true then the action don't cache or restore ~/go/pkg.
        # skip-pkg-cache: true

        # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
        # skip-build-cache: true


    - name: Run Gosec Security Scanner
      uses: securego/gosec@master
      with:
        # we let the report trigger a failure using the GitHub Security features.
        args: '-no-fail -fmt sarif -out results.sarif ./...'

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v1
      with:
        # Path to SARIF file relative to the root of the repository
        sarif_file: results.sarif

    - name: Lint
      run: make lint
      
    - name: Test
      run: make test

    - name: Upload Code Coverage
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
        files: ./coverage.txt               # optional
        fail_ci_if_error: true              # optional (default = false)
        verbose: true                       # optional (default = false)